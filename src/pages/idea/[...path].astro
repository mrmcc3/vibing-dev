---
import Html from "$lib/html.astro";
import Head from "$lib/head.astro";
import Nav from "$lib/navbar.astro";
import { CollectionEntry, getCollection } from "astro:content";
import { format } from "date-fns";

export async function getStaticPaths() {
  if (import.meta.env.PROD) return []; // ideas are local-only
  const pub = await getCollection("ideas");
  return pub.map((entry) => ({
    params: { path: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"ideas">;
}

const { entry } = Astro.props;

const {
  data: { title = "Untitled", description, pubDate, kind },
} = entry;
const { Content } = await entry.render();
---

<Html>
  <Head slot="head" title={title} description={description} ogType="article" noindex={true} />
  <Nav />
  <main class="flex-1 px-4">
    <article class="prose mx-auto break-words pb-12 dark:prose-invert sm:pb-24">
      <div class="flex flex-col items-start">
        <h1 class="text-2xl font-black leading-tight">
          {title}
        </h1>
        <div class="flex items-center space-x-1">
          <div class="text-sm text-zinc-600 dark:text-zinc-400">
            {
              kind === "article" ? (
                <span class="font-medium text-blue-600 dark:text-blue-400">Article</span>
              ) : kind === "note" ? (
                <span class="font-medium text-rose-600 dark:text-rose-400">Note</span>
              ) : (
                <span>Idea</span>
              )
            }
            {pubDate ? <span>due {format(pubDate, "do MMM")}</span> : null}
          </div>
        </div>
      </div>
      <Content />
    </article>
  </main>
</Html>
